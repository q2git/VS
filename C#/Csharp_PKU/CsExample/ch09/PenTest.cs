using System;
using System.Drawing;
using System.Collections;
using System.ComponentModel;
using System.Windows.Forms;
using System.Data;
using System.Drawing.Drawing2D;

namespace TestWin
{
	/// <summary>
	/// Form1 的摘要说明。
	/// </summary>
	public class Form1 : System.Windows.Forms.Form
	{
		private System.ComponentModel.IContainer components;

		public Form1()
		{
			//
			// Windows 窗体设计器支持所必需的
			//
			InitializeComponent();

			//
			// TODO: 在 InitializeComponent 调用后添加任何构造函数代码
			//
		}

		/// <summary>
		/// 清理所有正在使用的资源。
		/// </summary>
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if (components != null) 
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region Windows Form Designer generated code
		/// <summary>
		/// 设计器支持所需的方法 - 不要使用代码编辑器修改
		/// 此方法的内容。
		/// </summary>
		private void InitializeComponent()
		{
			// 
			// Form1
			// 
			this.AutoScaleBaseSize = new System.Drawing.Size(6, 14);
			this.ClientSize = new System.Drawing.Size(304, 185);
			this.Name = "Form1";
			this.Text = "Form1";
			this.Paint += new System.Windows.Forms.PaintEventHandler(this.Form1_Paint);

		}
		#endregion

		/// <summary>
		/// 应用程序的主入口点。
		/// </summary>
		[STAThread]
		static void Main() 
		{
			Application.Run(new Form1());
		}

		private void Form1_Paint(object sender, System.Windows.Forms.PaintEventArgs e)
		{
			Graphics g = e.Graphics;

			Pen pen;
			Point point = new Point( 10, 10 );
			Size sizeLine = new Size( 0, 150 );
			Size sizeOff = new Size( 30, 0 );

			pen = Pens.LimeGreen;
			g.DrawLine( pen, point+=sizeOff, point+sizeLine );
			pen = SystemPens.MenuText;
			g.DrawLine( pen, point+=sizeOff, point+sizeLine );
			pen = new Pen( Color.Red );
			g.DrawLine( pen, point+=sizeOff, point+sizeLine );
			pen = new Pen( Color.Red, 8 );
			g.DrawLine( pen, point+=sizeOff, point+sizeLine );
			
			pen.DashStyle = DashStyle.Dash;
			g.DrawLine( pen, point+=sizeOff, point+sizeLine );
			pen.DashStyle = DashStyle.Dot;
			g.DrawLine( pen, point+=sizeOff, point+sizeLine );
			
			pen.DashStyle = DashStyle.Solid;
			pen.StartCap =LineCap.Round;
			g.DrawLine( pen, point+=sizeOff, point+sizeLine );
			pen.EndCap = LineCap.Triangle;
			g.DrawLine( pen, point+=sizeOff, point+sizeLine );

			pen. DashPattern = new float[]{ 0.5f, 1f, 1,5f, 2f, 2.5f };
			g.DrawLine( pen, point+=sizeOff, point+sizeLine );
		}

	}
}
